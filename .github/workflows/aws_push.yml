name: Build and Push Kubernetes App to AWS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "us-east-1"
  K8S_CLUSTER_NAME: "filmdatahub-cluster"
  CLOUD_PROVIDER: "aws"
  CONTAINER_REGISTRY: "055239228382.dkr.ecr.us-east-1.amazonaws.com"
  DOCKER_IMAGE_TAG: ${{ github.sha }}
  DATABASE_NAME: "FilmDataHubDB"
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_HOST: "filmdatahub-dbserver.c89ueyaoiz9u.us-east-1.rds.amazonaws.com"
  DATABASE_PORT: "3306"

jobs:
  buildInfrastructure:
    name: Build Infrastructure
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4
      # Logs in with your AWS credentials
      - name: AWS login
        run: make login
      # Install the Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.13.1
      # Initialize Terraform
      - name: Initialize Terraform
        run: make terraform-init
      # Validate Terraform
      - name: Validate Terraform
        run: make terraform-validate
      # Plan Terraform
      - name: Plan Terraform
        run: make terraform-plan
      # Apply Terraform
      - name: Apply Terraform
        run: make terraform-apply
  deployToAWS:
    name: Deploy to AWS
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildInfrastructure]
    steps:
      # Checks out the repository and set everything up
      - uses: actions/checkout@v4
      # Set up QEMU
      - uses: docker/setup-qemu-action@v2
      # Set up Buildx
      - uses: docker/setup-buildx-action@v2
      # Build Docker Image
      - name: Build Docker Image
        run: make docker-build
      # Tag Docker Image
      - name: Tag Docker Image
        run: make docker-tag
      # Push Docker Image
      - name: Push Docker Image
        run: make docker-push
      # Sync Kubectl Context
      - name: Sync Kubectl Context
        run: make k8s-get-context
      # Clean Old Kubernetes Resources
      - name: Clean Old Kubernetes Resources
        run: make k8s-clean
      # Build Kubernetes Resources
      - name: Build Kubernetes Resources
        run: make k8s-build

