name: Build and Push Kubernetes App to Azure

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "filmdatahubregistry"
  CONTAINER_NAME: "filmdatahub"
  RESOURCE_GROUP: "FilmDataHubRG"
  CLUSTER_NAME: "filmdatahub-cluster"

jobs:
  buildInfrastructure:
    name: Build Infrastructure
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Install the Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.13.1

      # Initialize Terraform
      - name: Initialize Terraform
        run: terraform -chdir=azure init

      # Validate Terraform
      - name: Validate Terraform
        run: terraform -chdir=azure validate

      # Plan Terraform
      - name: Plan Terraform
        run: terraform -chdir=azure plan -out=tfplan

      # Apply Terraform
      - name: Apply Terraform
        run: terraform -chdir=azure apply tfplan
  buildAndPushImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildInfrastructure]
    steps:
      # Checks out the repository and set everything up
      - uses: actions/checkout@v4
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and PushDocker Image
        run: |
          make docker-deploy
  deployToKubernetes:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildAndPushImage]
    steps:
      - uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Setup Kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: v1.28.0
      - name: Set Kubernetes Context
        uses: azure/aks-set-context@v1
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: false
          use-kubelogin: true
      - name: Create Kubernetes Secret
        run: |
          kubectl delete secret filmdatahub-secret --ignore-not-found
          kubectl create secret generic filmdatahub-secret --from-literal=DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
      - name: Deploy to Kubernetes
        run: |
          make k8s-deploy